version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:5.0
    container_name: shopsavr-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: shopsavr
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - shopsavr-network

  # Redis Cache
  redis:
    image: redis:6.2-alpine
    container_name: shopsavr-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass password
    volumes:
      - redis_data:/data
    networks:
      - shopsavr-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: shopsavr-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      MONGODB_URI: mongodb://admin:password@mongodb:27017/shopsavr?authSource=admin
      REDIS_URL: redis://:password@redis:6379
      JWT_SECRET: your-jwt-secret-key
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - shopsavr-network
    command: npm run dev

  # Frontend Web App
  frontend:
    build:
      context: ./frontend/web
      dockerfile: Dockerfile
    container_name: shopsavr-frontend
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      REACT_APP_API_URL: http://localhost:3000
      REACT_APP_STRIPE_PUBLISHABLE_KEY: ${REACT_APP_STRIPE_PUBLISHABLE_KEY}
    volumes:
      - ./frontend/web:/app
      - /app/node_modules
    networks:
      - shopsavr-network
    command: npm start

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: shopsavr-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - shopsavr-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  shopsavr-network:
    driver: bridge